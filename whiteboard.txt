Pierre was so pleased with your console app for his bakery that he wants to hire you for a new project. This time, he would like you to build him an MVC application to help him track the vendors that purchase baked goods from him and the orders belonging to those vendors.

For example, Pierre might supply croissants to a vendor called "Suzie's Cafe" once a week. Pierre may want to create a new Vendor to represent the cafe and add new Orders to it to help keep track of his expanding business relationships.

Use Razor to display information on each page.

** Create a Vendor class. This class should include properties for the vendor's name, a description of the vendor, a List of Orders belonging to the vendor, and any other properties you would like to include.
** Create an Order class. This class should include properties for the title, the description, the price, the date, and any other properties you would like to include.
** The homepage of the app at the root path (localhost:5000/) should be a splash page welcoming Pierre and providing him with a link to a Vendors page.
** The vendors page should contain a link to a page presenting Pierre with a form he can fill out to create a new Vendor. After the form is submitted, ** the new Vendor object should be saved into a static List and Pierre should be routed back to the homepage.
** Pierre should be able to click a Vendor's name and go to a new page that will display all of that Vendor's orders.
** Pierre should be provided with a link to a page presenting him with a form to create a new Order for a particular Vendor. Hint: The route for this page might look something like: "/vendors/1/orders/new".

Vendor
// constructor for vendor that includes name, description, a list of orders, if there's time corroborating details like address, contact, etc.
  // properties, starting public, testing private later on as time allows
  // create and read methods
  // Vendor list will probably be stored in a dictionary where the key is the vendor name and the value is the list of their orders

Order
// constructor for order that includes the title--what the hell is this?--the description, the price, the date--if there's time, equate the title to an order number
  // properties for the corresponding properties
  // create and read methods
  // method that stores the orders to a static list

Views
  homepage
  vendors
  new vendor form page
  vendors detail page (Show())
  new order form page
  order detail page (NOT IN THE SPECS)